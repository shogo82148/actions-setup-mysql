name: "Build MySQL"
on:
  # pull_request:
  push:
    branches:
      - "releases/*"
  workflow_dispatch:
    inputs:
      mysql-versions:
        description: MySQL versions to build (JSON Array)
        required: false
        default: ""

jobs:
  list:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: list available MySQL versions
        run: |
          if [ -n "$MYSQL_VERSIONS" ]; then
            echo "::set-output name=matrix::$(printenv MYSQL_VERSIONS | jq -c '{mysql: .}')"
          else
            echo "::set-output name=matrix::$(< versions/mysql.json jq -c '{mysql: .}')"
          fi
        env:
          MYSQL_VERSIONS: ${{ github.event.inputs.mysql-versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-linux:
    runs-on: ubuntu-18.04
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    timeout-minutes: 180
    steps:
      - name: install gcc
        run: |
          sudo apt-get install gcc-8 g++-8
      - uses: actions/checkout@v2
      - run: .github/build-mysql-linux.sh "$MYSQL_VERSION"
      - name: upload
        shell: bash
        run: |
          ACTIONS_VERSION=v$(< "$GITHUB_WORKSPACE/package.json" jq -r .version)
          mv "$RUNNER_TEMP/mysql.tar.zstd" "$RUNNER_TEMP/mysql-$MYSQL_VERSION-linux-x64.tar.zstd"
          gh release upload --clobber "$ACTIONS_VERSION" "$RUNNER_TEMP/mysql-$MYSQL_VERSION-linux-x64.tar.zstd"
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
          GITHUB_TOKEN: ${{ github.token }}

  build-darwin:
    runs-on: macos-10.15
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@v2
      - run: .github/build-mysql-darwin.sh "$MYSQL_VERSION"
      - name: upload
        shell: bash
        run: |
          ACTIONS_VERSION=v$(< "$GITHUB_WORKSPACE/package.json" jq -r .version)
          mv "$RUNNER_TEMP/mysql.tar.zstd" "$RUNNER_TEMP/mysql-$MYSQL_VERSION-darwin-x64.tar.zstd"
          gh release upload --clobber "$ACTIONS_VERSION" "$RUNNER_TEMP/mysql-$MYSQL_VERSION-darwin-x64.tar.zstd"
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
          GITHUB_TOKEN: ${{ github.token }}

  build-windows:
    runs-on: windows-2019
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@v2
      - run: .github\build-mysql-windows.ps1 $env:MYSQL_VERSION
      - name: upload
        shell: bash
        run: |
          ACTIONS_VERSION=v$(< "$GITHUB_WORKSPACE/package.json" jq -r .version)
          TEMP_DIR=$(cygpath "C:\\Temp")
          mv "$TEMP_DIR/mysql.zip" "$TEMP_DIR/mysql-$MYSQL_VERSION-win32-x64.zip"
          gh release upload --clobber "$ACTIONS_VERSION" "$TEMP_DIR/mysql-$MYSQL_VERSION-win32-x64.zip"
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
          GITHUB_TOKEN: ${{ github.token }}
