name: "Build MySQL"
on:
  # pull_request:
  push:
    branches:
      - "releases/*"
  workflow_dispatch:
    inputs:
      mysql-versions:
        description: MySQL versions to build (JSON Array)
        required: false
        default: ""

jobs:
  list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: list available MySQL versions
        run: |
          if [ -n "$MYSQL_VERSIONS" ]; then
            echo "::set-output name=matrix::$(printenv MYSQL_VERSIONS | jq -c '{mysql: .}')"
          else
            echo "::set-output name=matrix::$(< versions/mysql.json jq -c '{mysql: .}')"
          fi
        env:
          MYSQL_VERSIONS: ${{ github.event.inputs.mysql-versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-linux:
    runs-on: ubuntu-18.04
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    steps:
      - name: install gcc
        run: |
          sudo apt-get install gcc-8 g++-8
      - uses: actions/checkout@v2
      - run: .github/build-mysql-linux.sh "$MYSQL_VERSION"
      - uses: actions/upload-artifact@v2
        with:
          name: mysql-${{ matrix.mysql }}-linux-x64.tar.xz
          path: ${{ runner.temp }}/mysql.tar.xz

  build-darwin:
    runs-on: macos-10.15
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    steps:
      - uses: actions/checkout@v2
      - run: .github/build-mysql-darwin.sh "$MYSQL_VERSION"
      - uses: actions/upload-artifact@v2
        with:
          name: mysql-${{ matrix.mysql }}-darwin-x64.tar.xz
          path: ${{ runner.temp }}/mysql.tar.xz

  build-windows:
    runs-on: windows-2019
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    env:
      MYSQL_VERSION: ${{ matrix.mysql }}
    steps:
      - uses: actions/checkout@v2
      - run: .github\build-mysql-windows.ps1 $env:MYSQL_VERSION
      - uses: actions/upload-artifact@v2
        with:
          name: mysql-${{ matrix.mysql }}-win32-x64.zip
          path: "C:\\Temp\\mysql.zip"

  upload:
    needs:
      - build-linux
      - build-darwin
      - build-windows
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: upload to azure
        run: |
          "$GITHUB_WORKSPACE/.github/upload-to-azure.sh"
        env:
          AZCOPY_SPA_APPLICATION_ID: ${{ secrets.AZCOPY_SPA_APPLICATION_ID }}
          AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZCOPY_SPA_CLIENT_SECRET }}
          AZCOPY_TENANT_ID: ${{ secrets.AZCOPY_TENANT_ID }}
        working-directory: artifacts
