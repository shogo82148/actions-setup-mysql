name: "Build MySQL"
on:
  pull_request:
  push:
    branches:
      - "releases/*"
  workflow_dispatch:
    inputs:
      mysql-versions:
        description: MySQL versions to build (JSON Array)
        required: false
        default: ""

jobs:
  list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: list available MySQL versions
        run: |
          if [ -n "$MYSQL_VERSIONS" ]; then
            echo "::set-output name=matrix::$(printenv MYSQL_VERSIONS | jq -c '{mysql: .}')"
          else
            echo "::set-output name=matrix::$(cat versions/mysql.json | jq -c '{mysql: .}')"
          fi
        env:
          MYSQL_VERSIONS: ${{ github.event.inputs.mysql-versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-linux:
    runs-on: ubuntu-18.04
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - run: .github/build-mysql-linux.sh ${{ matrix.mysql }}
      - name: upload
        run: |
          ACTIONS_VERSION=v$(cat "$GITHUB_WORKSPACE/package.json" | jq -r .version)
          aws --region us-east-1 s3 cp --acl public-read "$RUNNER_TEMP/mysql.tar.gz" "s3://shogo82148-actions-setup-mysql/$ACTIONS_VERSION/mysql-$MYSQL_VERSION-linux-x64.tar.gz"
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-darwin:
    runs-on: macos-10.15
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - run: .github/build-mysql-darwin.sh ${{ matrix.mysql }}
      - name: upload
        run: |
          ACTIONS_VERSION=v$(cat "$GITHUB_WORKSPACE/package.json" | jq -r .version)
          aws --region us-east-1 s3 cp --acl public-read "$RUNNER_TEMP/mysql.tar.gz" "s3://shogo82148-actions-setup-mysql/$ACTIONS_VERSION/mysql-$MYSQL_VERSION-darwin-x64.tar.gz"
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
