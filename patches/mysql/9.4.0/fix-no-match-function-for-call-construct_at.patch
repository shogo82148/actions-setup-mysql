diff --git a/router/src/mysql_rest_service/src/mrs/endpoint/handler/helper/url_paths.h b/router/src/mysql_rest_service/src/mrs/endpoint/handler/helper/url_paths.h
index 89966664610..c52e4712d68 100644
--- a/router/src/mysql_rest_service/src/mrs/endpoint/handler/helper/url_paths.h
+++ b/router/src/mysql_rest_service/src/mrs/endpoint/handler/helper/url_paths.h
@@ -124,10 +124,13 @@ inline auto path_db_object_with_index(const std::string &object_path,
   if (is_index) {
     // When the url path is empty, its root path, which
     // http plugin processes as "", instead "/".
-    if (service_schema_path.empty())
-      result.emplace_back(service_schema_path, false, false);
-    else
-      result.emplace_back(service_schema_path + "/", false, false);
+    if (service_schema_path.empty()) {
+      ::http::base::UriPathMatcher m{service_schema_path, false, false};
+      result.push_back(std::move(m));
+    } else {
+      ::http::base::UriPathMatcher m{service_schema_path + "/", false, false};
+      result.push_back(std::move(m));
+    }
   }

   return result;
@@ -142,10 +145,13 @@ inline auto path_file(std::string service_schema_path,
   if (is_index) {
     // When the url path is empty, it's root path, which
     // http plugin processes as "", instead "/".
-    if (service_schema_path.empty())
-      result.emplace_back(service_schema_path, false, false);
-    else
-      result.emplace_back(service_schema_path + "/", false, false);
+    if (service_schema_path.empty()) {
+      ::http::base::UriPathMatcher m{service_schema_path, false, false};
+      result.push_back(std::move(m));
+    } else {
+      ::http::base::UriPathMatcher m{service_schema_path + "/", false, false};
+      result.push_back(std::move(m));
+    }
   }

   return result;
