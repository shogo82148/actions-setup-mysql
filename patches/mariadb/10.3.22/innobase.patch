diff --git a/include/intrusive_list.h b/include/intrusive_list.h
index d745c6c6c62..3ac2ea0cd20 100644
--- a/include/intrusive_list.h
+++ b/include/intrusive_list.h
@@ -97,8 +97,8 @@ template <class T, class Tag= void> class list
     reference operator*() { return *static_cast<pointer>(node_); }
     pointer operator->() { return static_cast<pointer>(node_); }
 
-    bool operator==(const Iterator &rhs) { return node_ == rhs.node_; }
-    bool operator!=(const Iterator &rhs) { return !(*this == rhs); }
+    bool operator==(const Iterator &rhs) const { return node_ == rhs.node_; }
+    bool operator!=(const Iterator &rhs) const { return !(*this == rhs); }
 
   private:
     ListNode *node_;
diff --git a/storage/innobase/include/buf0buf.h b/storage/innobase/include/buf0buf.h
index c9529ee4b73..43316377876 100644
--- a/storage/innobase/include/buf0buf.h
+++ b/storage/innobase/include/buf0buf.h
@@ -1400,7 +1400,7 @@ buf_page_encrypt_before_write(
 NOTE! The definition appears here only for other modules of this
 directory (buf) to see it. Do not use from outside! */
 
-typedef struct {
+class buf_tmp_buffer_t {
 private:
 	int32		reserved;	/*!< true if this slot is reserved
 					*/
@@ -1430,7 +1430,7 @@ typedef struct {
 		return !my_atomic_fas32_explicit(&reserved, true,
 						 MY_MEMORY_ORDER_RELAXED);
 	}
-} buf_tmp_buffer_t;
+};
 
 /** The common buffer control block structure
 for compressed and uncompressed frames */
